<?xml version="1.0" encoding="UTF-8" ?>
<!--默认情况下，springboot使用logback记录日志，并用INFO级别输出到控制台-->
<configuration scan="true">
    <property name="USER_HOME" value="${LOG_PATH}"/>
    <property name="DEFAULT_FILE_NAME" value="DEFAULT"/>
    <property name="SYSTEM_NAME" value="web"/>
    <property name="MaxSize" value="100mb"/> <!-- support kb、mb、gb  -->
    <property name="QueueSize" value="8196"/>
    <property name="MaxFlushTime" value="1000"/> <!-- ms -->
    <property name="print_charset" value="utf-8"/>
    
    <property name="custom_layout" value="%d{yyyyMMdd HH:mm:ss SSS} [%thread-${SYSTEM_NAME}][%level]-%msg%n" />

    <!--控制台输出-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${custom_layout}</pattern>
            <charset>${print_charset}</charset>
        </encoder>
    </appender>
	

    <!--  debug 文件日志   -->
    <!--滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${USER_HOME}/logs/${SYSTEM_NAME}-debug.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${USER_HOME}/logs/${SYSTEM_NAME}-debug-%d{yyyyMMdd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>${MaxSize}</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <layout>
            <Pattern>${custom_layout}</Pattern>
        </layout>
    </appender>

    <!--  info 文件日志   -->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${USER_HOME}/logs/${SYSTEM_NAME}-info.log</File>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>level>=INFO</expression>
            </evaluator>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${USER_HOME}/logs/${SYSTEM_NAME}-info-%d{yyyyMMdd}.log
            </FileNamePattern>
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>
        <layout>
            <Pattern>${custom_layout}</Pattern>
        </layout>
    </appender>

    <!--  error 文件日志   -->
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${USER_HOME}/logs/${SYSTEM_NAME}-error.log</File>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>level==ERROR</expression>
            </evaluator>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${USER_HOME}/logs/${SYSTEM_NAME}-error-%d{yyyyMMdd}.log
            </FileNamePattern>
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>
        <layout>
            <Pattern>${custom_layout}</Pattern>
        </layout>
    </appender>

    <!--异步appender-->
    <appender name="async_debug" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${QueueSize}</queueSize>
        <!-- 缓冲时间 -->
        <maxFlushTime>${MaxFlushTime}</maxFlushTime>
        <appender-ref ref="debug"/>
    </appender>

    <!--指定org.springframework.session.web.http.SessionRepositoryFilter的日志打印级别-->
    <logger name="org.springframework.session.web.http.SessionRepositoryFilter" level="info"/>

    <!--根loger;可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger-->
    <root level="INFO">
        <appender-ref ref="info"/>
        <appender-ref ref="error"/>
        <!--  开发 -->
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="async_debug"/>
    </root>
</configuration>

